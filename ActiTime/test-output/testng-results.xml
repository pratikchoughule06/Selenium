<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="15" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-14T23:15:28 IST" name="Suite" finished-at="2022-07-14T23:16:23 IST" duration-ms="54615">
    <groups>
    </groups>
    <test started-at="2022-07-14T23:15:28 IST" name="ChromeTest" finished-at="2022-07-14T23:15:44 IST" duration-ms="16323">
      <class name="tests.validate">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.validate@50eac852]" started-at="2022-07-14T23:15:30 IST" name="beforeClass" finished-at="2022-07-14T23:15:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.validate@50eac852]" started-at="2022-07-14T23:15:30 IST" name="beforeMethod" finished-at="2022-07-14T23:15:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:tests.validate@50eac852]" started-at="2022-07-14T23:15:30 IST" name="test1" finished-at="2022-07-14T23:15:30 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.validate@50eac852]" started-at="2022-07-14T23:15:30 IST" name="afterMethod" finished-at="2022-07-14T23:15:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.validate@50eac852]" started-at="2022-07-14T23:15:30 IST" name="afterClass" finished-at="2022-07-14T23:15:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.validate -->
      <class name="tests.VerifyHeadersOfApplication">
        <test-method is-config="true" signature="launchBrowser(java.lang.String)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:28 IST" name="launchBrowser" finished-at="2022-07-14T23:15:30 IST" duration-ms="2377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="createPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:30 IST" name="createPOMObjects" finished-at="2022-07-14T23:15:30 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObjects -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:30 IST" name="loginToApplication" finished-at="2022-07-14T23:15:32 IST" duration-ms="1809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:32 IST" name="toVerifyTimeTrackTab" finished-at="2022-07-14T23:15:35 IST" duration-ms="3102" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.VerifyHeadersOfApplication.toVerifyTimeTrackTab(VerifyHeadersOfApplication.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTimeTrackTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:35 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:36 IST" duration-ms="492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTimeTrackTab status=FAILURE method=VerifyHeadersOfApplication.toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:36 IST" name="loginToApplication" finished-at="2022-07-14T23:15:36 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:36 IST" name="toVerifyTaskTab" finished-at="2022-07-14T23:15:37 IST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTaskTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:37 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:37 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTaskTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:37 IST" name="loginToApplication" finished-at="2022-07-14T23:15:38 IST" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:38 IST" name="toVerifyReportsTab" finished-at="2022-07-14T23:15:38 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyReportsTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:38 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:38 IST" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyReportsTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:38 IST" name="loginToApplication" finished-at="2022-07-14T23:15:38 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:38 IST" name="toVerifyUsersTab" finished-at="2022-07-14T23:15:43 IST" duration-ms="4597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyUsersTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:43 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:43 IST" duration-ms="121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyUsersTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:43 IST" name="loginToApplication" finished-at="2022-07-14T23:15:43 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:43 IST" name="toVerifyWorkSchedule" finished-at="2022-07-14T23:15:44 IST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyWorkSchedule -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:44 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:44 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyWorkSchedule status=SUCCESS method=VerifyHeadersOfApplication.toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:44 IST" name="closeBrowser" finished-at="2022-07-14T23:15:44 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="clearPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@3835c46]" started-at="2022-07-14T23:15:44 IST" name="clearPOMObjects" finished-at="2022-07-14T23:15:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObjects -->
      </class> <!-- tests.VerifyHeadersOfApplication -->
    </test> <!-- ChromeTest -->
    <test started-at="2022-07-14T23:15:44 IST" name="FirefoxTest" finished-at="2022-07-14T23:16:02 IST" duration-ms="17784">
      <class name="tests.validate">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.validate@6379eb]" started-at="2022-07-14T23:15:51 IST" name="beforeClass" finished-at="2022-07-14T23:15:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1()[pri:0, instance:tests.validate@6379eb]" started-at="2022-07-14T23:15:51 IST" name="test1" finished-at="2022-07-14T23:15:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.validate@6379eb]" started-at="2022-07-14T23:15:51 IST" name="beforeMethod" finished-at="2022-07-14T23:15:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.validate@6379eb]" started-at="2022-07-14T23:15:51 IST" name="afterMethod" finished-at="2022-07-14T23:15:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.validate@6379eb]" started-at="2022-07-14T23:15:51 IST" name="afterClass" finished-at="2022-07-14T23:15:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.validate -->
      <class name="tests.VerifyHeadersOfApplication">
        <test-method is-config="true" signature="launchBrowser(java.lang.String)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:44 IST" name="launchBrowser" finished-at="2022-07-14T23:15:51 IST" duration-ms="6887" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="createPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:51 IST" name="createPOMObjects" finished-at="2022-07-14T23:15:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObjects -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:51 IST" name="loginToApplication" finished-at="2022-07-14T23:15:53 IST" duration-ms="1543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:53 IST" name="toVerifyTimeTrackTab" finished-at="2022-07-14T23:15:53 IST" duration-ms="239" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.VerifyHeadersOfApplication.toVerifyTimeTrackTab(VerifyHeadersOfApplication.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTimeTrackTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:53 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:53 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTimeTrackTab status=FAILURE method=VerifyHeadersOfApplication.toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:53 IST" name="loginToApplication" finished-at="2022-07-14T23:15:54 IST" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:54 IST" name="toVerifyTaskTab" finished-at="2022-07-14T23:15:55 IST" duration-ms="604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTaskTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:55 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:55 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTaskTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:55 IST" name="loginToApplication" finished-at="2022-07-14T23:15:56 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:56 IST" name="toVerifyReportsTab" finished-at="2022-07-14T23:15:56 IST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyReportsTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:56 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:57 IST" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyReportsTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:57 IST" name="loginToApplication" finished-at="2022-07-14T23:15:57 IST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:57 IST" name="toVerifyUsersTab" finished-at="2022-07-14T23:15:58 IST" duration-ms="851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyUsersTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:58 IST" name="logoutFromApplication" finished-at="2022-07-14T23:15:58 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyUsersTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:58 IST" name="loginToApplication" finished-at="2022-07-14T23:15:59 IST" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:15:59 IST" name="toVerifyWorkSchedule" finished-at="2022-07-14T23:16:00 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyWorkSchedule -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:16:00 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:00 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyWorkSchedule status=SUCCESS method=VerifyHeadersOfApplication.toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="clearPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:16:00 IST" name="clearPOMObjects" finished-at="2022-07-14T23:16:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyHeadersOfApplication@9f116cc]" started-at="2022-07-14T23:16:00 IST" name="closeBrowser" finished-at="2022-07-14T23:16:02 IST" duration-ms="2391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyHeadersOfApplication -->
    </test> <!-- FirefoxTest -->
    <test started-at="2022-07-14T23:16:02 IST" name="MSEdgeTest" finished-at="2022-07-14T23:16:23 IST" duration-ms="20477">
      <class name="tests.validate">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.validate@7ec7ffd3]" started-at="2022-07-14T23:16:03 IST" name="beforeClass" finished-at="2022-07-14T23:16:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.validate@7ec7ffd3]" started-at="2022-07-14T23:16:03 IST" name="beforeMethod" finished-at="2022-07-14T23:16:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:tests.validate@7ec7ffd3]" started-at="2022-07-14T23:16:03 IST" name="test1" finished-at="2022-07-14T23:16:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.validate@7ec7ffd3]" started-at="2022-07-14T23:16:03 IST" name="afterMethod" finished-at="2022-07-14T23:16:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.validate@7ec7ffd3]" started-at="2022-07-14T23:16:03 IST" name="afterClass" finished-at="2022-07-14T23:16:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.validate -->
      <class name="tests.VerifyHeadersOfApplication">
        <test-method is-config="true" signature="launchBrowser(java.lang.String)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:02 IST" name="launchBrowser" finished-at="2022-07-14T23:16:03 IST" duration-ms="1315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="createPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:03 IST" name="createPOMObjects" finished-at="2022-07-14T23:16:03 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObjects -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:03 IST" name="loginToApplication" finished-at="2022-07-14T23:16:07 IST" duration-ms="3103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:07 IST" name="toVerifyTimeTrackTab" finished-at="2022-07-14T23:16:11 IST" duration-ms="4860" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Time-Track Page Title does not match expected [actiTIME - Enter Time-Trac] but found [actiTIME - Enter Time-Track]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.VerifyHeadersOfApplication.toVerifyTimeTrackTab(VerifyHeadersOfApplication.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTimeTrackTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:11 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:12 IST" duration-ms="498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTimeTrackTab status=FAILURE method=VerifyHeadersOfApplication.toVerifyTimeTrackTab()[pri:1, instance:tests.VerifyHeadersOfApplication@5b239d7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:12 IST" name="loginToApplication" finished-at="2022-07-14T23:16:12 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:12 IST" name="toVerifyTaskTab" finished-at="2022-07-14T23:16:15 IST" duration-ms="2588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyTaskTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:15 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:15 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyTaskTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyTaskTab()[pri:2, instance:tests.VerifyHeadersOfApplication@5b239d7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:15 IST" name="loginToApplication" finished-at="2022-07-14T23:16:15 IST" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:15 IST" name="toVerifyReportsTab" finished-at="2022-07-14T23:16:16 IST" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyReportsTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:16 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:16 IST" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyReportsTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyReportsTab()[pri:3, instance:tests.VerifyHeadersOfApplication@5b239d7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:16 IST" name="loginToApplication" finished-at="2022-07-14T23:16:17 IST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:17 IST" name="toVerifyUsersTab" finished-at="2022-07-14T23:16:21 IST" duration-ms="4301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyUsersTab -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:21 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:21 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyUsersTab status=SUCCESS method=VerifyHeadersOfApplication.toVerifyUsersTab()[pri:4, instance:tests.VerifyHeadersOfApplication@5b239d7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="loginToApplication()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:21 IST" name="loginToApplication" finished-at="2022-07-14T23:16:22 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApplication -->
        <test-method signature="toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:22 IST" name="toVerifyWorkSchedule" finished-at="2022-07-14T23:16:22 IST" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toVerifyWorkSchedule -->
        <test-method is-config="true" signature="logoutFromApplication(org.testng.ITestResult)[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:22 IST" name="logoutFromApplication" finished-at="2022-07-14T23:16:22 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=toVerifyWorkSchedule status=SUCCESS method=VerifyHeadersOfApplication.toVerifyWorkSchedule()[pri:5, instance:tests.VerifyHeadersOfApplication@5b239d7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutFromApplication -->
        <test-method is-config="true" signature="clearPOMObjects()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:22 IST" name="clearPOMObjects" finished-at="2022-07-14T23:16:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObjects -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.VerifyHeadersOfApplication@5b239d7d]" started-at="2022-07-14T23:16:22 IST" name="closeBrowser" finished-at="2022-07-14T23:16:23 IST" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.VerifyHeadersOfApplication -->
    </test> <!-- MSEdgeTest -->
  </suite> <!-- Suite -->
</testng-results>
